apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: polyphony-eval
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: music-rnn
        sort: eval
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: sort
                operator: In
                values:
                - learndisk
                - learner
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: volume
        persistentVolumeClaim:
          claimName: hivefiles
      containers:
      - name: eval
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "3"
        imagePullPolicy: Always
        image: mysterygoat/dev_back:v0
        volumeMounts:
        - mountPath: "/mnt/data"
          name: volume
        command: ["bash"]
        args: ["-c", "if [ ! -f /mnt/data/$train_data ]; then mv $data_tar /mnt/data/; cd /mnt/data/; tar -xvf $data_tar; fi; for((;;)); do polyphony_rnn_train --run_dir=/mnt/data/rundir --sequence_example_file=/mnt/data/$train_data --hparams='learning_rate=0.0014,attn_length=15,batch_size=64,rnn_layer_sizes=[256,256,256]' --num_training_steps=5 --eval; done;"]
